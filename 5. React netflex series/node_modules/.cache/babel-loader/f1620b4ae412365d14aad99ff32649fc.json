{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dc\\\\Desktop\\\\Projects\\\\React courser\\\\hello\\\\src\\\\index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  createElement\n} = require('react');\n\nvar React = require('react');\n\nvar ReactDOM = require('react-dom'); // 1 render(\"what to show \" ,  \"where  to show \" , | \"call back function \")\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"Hello every one from React js\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 17\n}, this), document.getElementById(\"root\")); //  2 rendering elements using  simple javascript\n\nvar h1 = document.createElement('h1');\nh1.innerHTML = \"hello from simple javascript \";\ndocument.getElementById(\"root\").appendChild(h1); //  3 rendering  multiple jsx elements : render method only render one element ...to render more then one elements rape the elements inside the div .\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"This is heading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"this is paragraph  \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 17\n}, this), document.getElementById('root')); //   4 in react  v16  its possible to render()\n// to return an array of element .\n//  var array = [ 1st , 2nd , 3rd , so on ... ]\n\nReactDOM.render([/*#__PURE__*/_jsxDEV(\"h2\", {\n  children: \"This is heading act as 1st element of array\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"this is paragraph  act as second element of array  \"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 5\n}, this)], document.getElementById('root')); // react fragment\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"This is heading using fragment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"this is paragraph  act as second element of array  \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"names":["createElement","require","React","ReactDOM","render","document","getElementById","h1","innerHTML","appendChild"],"sources":["C:/Users/dc/Desktop/Projects/React courser/hello/src/index.js"],"sourcesContent":["const { createElement } = require('react');\nvar React = require('react')\nvar ReactDOM = require('react-dom')\n\n\n// 1 render(\"what to show \" ,  \"where  to show \" , | \"call back function \")\nReactDOM.render(<h1>Hello every one from React js</h1>,\ndocument.getElementById(\"root\"));\n\n\n//  2 rendering elements using  simple javascript\nvar h1 = document.createElement('h1');\nh1.innerHTML = \"hello from simple javascript \";\ndocument.getElementById(\"root\").appendChild(h1);\n\n//  3 rendering  multiple jsx elements : render method only render one element ...to render more then one elements rape the elements inside the div .\nReactDOM.render(<div>\n    <h2>This is heading</h2>\n    <p>this is paragraph  </p>\n</div>, document.getElementById('root'))\n  \n//   4 in react  v16  its possible to render()\n// to return an array of element .\n//  var array = [ 1st , 2nd , 3rd , so on ... ]\n\nReactDOM.render([\n    <h2>This is heading act as 1st element of array</h2>,\n    <p>this is paragraph  act as second element of array  </p>\n], document.getElementById('root'));\n\n// react fragment\n \nReactDOM.render(\n    <React.Fragment>\n        <h2>This is heading using fragment</h2>\n        <p>this is paragraph  act as second element of array  </p>\n\n    </React.Fragment>\n, document.getElementById('root'));\n"],"mappings":";;;AAAA,MAAM;EAAEA;AAAF,IAAoBC,OAAO,CAAC,OAAD,CAAjC;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAtB,C,CAGA;;;AACAE,QAAQ,CAACC,MAAT,eAAgB;EAAA;AAAA;EAAA;EAAA;EAAA;AAAA,QAAhB,EACAC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADA,E,CAIA;;AACA,IAAIC,EAAE,GAAGF,QAAQ,CAACL,aAAT,CAAuB,IAAvB,CAAT;AACAO,EAAE,CAACC,SAAH,GAAe,+BAAf;AACAH,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCG,WAAhC,CAA4CF,EAA5C,E,CAEA;;AACAJ,QAAQ,CAACC,MAAT,eAAgB;EAAA,wBACZ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADY,eAEZ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAFY;AAAA;EAAA;EAAA;EAAA;AAAA,QAAhB,EAGQC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHR,E,CAKA;AACA;AACA;;AAEAH,QAAQ,CAACC,MAAT,CAAgB,cACZ;EAAA;AAAA;EAAA;EAAA;EAAA;AAAA,QADY,eAEZ;EAAA;AAAA;EAAA;EAAA;EAAA;AAAA,QAFY,CAAhB,EAGGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHH,E,CAKA;;AAEAH,QAAQ,CAACC,MAAT,eACI,QAAC,KAAD,CAAO,QAAP;EAAA,wBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ,eAEI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAAA;EAAA;EAAA;EAAA;AAAA,QADJ,EAMEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF"},"metadata":{},"sourceType":"module"}